package net.white_azalea.models.parsers.arguments

import java.io.File

import net.white_azalea.datas.arguments.Config
import scopt.OptionParser

/**
 * parse request arguments definition.
 */
class ArgParser extends OptionParser[Config]("ut_converter") {
  head("UT XML converter", "1.0-SNAPSHOT")

  def validateExistsFile(leftMsg: String)(file: File): Either[String, Unit] =
    if (file.exists() && file.isFile) Right() else Left(leftMsg)

  opt[File]('t', "template")
    .optional()
    .text("Template for generate file (default html)")
    .action((f, conf) => conf.copy(template = f))
    .validate(v => if (v.isFile) Right() else Left("Can't find template."))

  arg[File]("javadocXml")
    .required()
    .text("Path for XML file that using MarkusBernhardt/xml-doclet.")
    .action((f, c) => c.copy(javaDocXml = f))
    .validate(v => {
      if (!v.isFile) Left("Not a file.")
      else if (!v.getAbsolutePath.endsWith(".xml")) Left("Not a XML file.")
      else Right()
    })

  arg[File]("junitDir")
    .required()
    .text("Path for unit test results directory path.")
    .action((f, c) => c.copy(junitResultDir = f))
    .validate(v => if (v.isDirectory) Right() else Left("Not directory."))

  help("help").text("print this usage text.")

  note(
    "This program requires XMLs that generated by MarkusBernhardt/xml-doclet (var 1.0.5)\n" +
      " and Junit test results XML files."
  )
}
