package net.white_azalea.parsers.arguments

import java.io.File

import scopt.OptionParser

/**
 * parse request arguments definition.
 *
 * Created by azalea on 2017/06/04.
 */
object ArgParser {

  val parser = new OptionParser[Config]("ut_converter") {
    head("UT XML converter", "1.0-SNAPSHOT")

    arg[File]("path_to_javadoc_xml")
      .required()
      .text("Path for XML file that using MarkusBernhardt/xml-doclet.")
      .action((f, c) => c.copy(javaDocXml = f))
      .validate(v => {
        if (!v.isFile) Left("Not a file.")
        else if (!v.getAbsolutePath.endsWith(".xml")) Left("Not a XML file.")
        else Right()
      })

    arg[File]("path_to_junit_xml_dir")
      .required()
      .text("Path for unit test results directory path.")
      .action((f, c) => c.copy(junitResultDir = f))
      .validate(v => if (v.isDirectory) Right() else Left("Not directory."))

    arg[File]("output")
      .optional()
      .text("Path to output CSV file path.")
      .action((f, c) => c.copy(output = f))

    help("help").text("print this usage text.")

    note(
      "This program requires XMLs that generated by MarkusBernhardt/xml-doclet (var 1.0.5)\n" +
        " and Junit test results XML files."
    )
  }

  def parse(args: Array[String]): Option[Config] = {
    parser.parse(args, Config(new File("./output.html"), new File("."), new File(".")))
  }
}
